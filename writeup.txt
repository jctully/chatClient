1. Joseph Tully, Jared Jacobson

2. When we manually test our program, it appears to work according to the write-up. However, ATHINA still lists us as failing tests 2 and 5. We believe the timeout test failure to be a false negative, after emailing with Professor Tsikerdekis to solve the problem to no avail. The test 5 failure on private messages we cannot recreate through our own testing (private messages seem to work fine), but could be related to the "broken pipe" error on the efficiency section. Finally, the autograder is showing clang errors that we don't know how to interpret, and can't be recreated on our end. To fix the private messages failure, we tried many many things, including double checking the values of our sends and receives, checking our observer logic, as well as how observers and participants are affiliated on the server. Given more time, we would research what could be causing the broken pipes problem which we don't understand.

3. To test our code throughout the process, we incrementally added features from the write-up, and checked sections were working before moving on. We would test parts of the protocol by making participants and observers, and checking for them to follow expected behavior. We also made use of the testing script once it was made available.

4. The biggest difficulty in the beginning was implementing the many features in the protocol, and organizing the layout of our code. Later on, once most of the program was functioning, the biggest problem we had was making small changes to conform to the testing script. Finally, testing proved to be a problem due to the complexity of testing all the features by hand, and  finding the source of a problem manually when the script noticed a failure we didn't experience.
